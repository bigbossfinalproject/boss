<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boss.cashbook.model.ItemBean">
	
	<!-- 분류 항목을 저장하기 -->
	<insert id="addItem" parameterType="item">
		insert into item values(#{item_code}, #{parent_code}, #{item_level}, #{item_name}, #{item_seq})
	</insert>
	
	<!-- 분류 항목을 수정하기(사용할 계획이 없음) -->
	<update id="updateItem" parameterType="item">
		update item set parent_code <![CDATA[=]]> #{parent_code}, item_level <![CDATA[=]]> #{item_level}, item_name <![CDATA[=]]> #{item_name}, item_seq <![CDATA[=]]> #{item_seq} where item_code <![CDATA[=]]> #{item_code}
	</update>
	
	<!-- 분류 항목을 삭제하기 -->
	<delete id="deleteItem">
		delete from item where item_code <![CDATA[=]]> #{item_code}
	</delete>
	
	<!-- 기본 저장할 분류코드 목록을 가져오기 -->
	<select id="basicItem" resultType="item">
		select * from item where item_code not like #{item_code}
	</select>
	
	<!-- 분류코드에 따른 목록을 가져오기 -->
	<select id="itemList" resultType="item">
		select * from item where item_code like #{item_code} order by item_seq asc
	</select>
	
	<!-- 3단계 분류코드에 따른 목록을 가져오기 -->
	<select id="itemDetailList" resultType="item">
		select * from item where item_code like #{item_code} and item_level = 3 order by item_seq asc
	</select>
	
	<!-- 분류코드에 따른 목록을 가져오기 -->
	<select id="detailItemList" resultType="item">
		select * from item where item_code like #{item_code} and item_level = 3
	</select>
	
	<!-- 분류코드에 따른 1개의 정보 가져오기 -->
	<select id="itemOne" resultType="item">
		select * from item where item_code <![CDATA[=]]> #{item_code}
	</select>
	
	<!-- 분류코드의 세부항목 개수를 가져오기 -->
	<select id="itemCount" resultType="int">
		select count(*) from item where parent_code like #{item_code} and item_level = 3
	</select>
	
	<!-- 분류코드의 순번을 가져오기 -->
	<select id="maxSeq" resultType="int">
		select max(item_seq) from item where parent_code like #{item_code}
	</select>
	
	<!-- 관리자 계정의 아이템 목록을 가져오기 -->
	<select id="idnItemList" parameterType="int" resultType="item">
		select * from item where root_idn <![CDATA[=]]> #{root_idn}
	</select>
	
	<!-- 관리자 계정의 아이템 목록을 가져오기 -->
	<delete id="idnDeleteItem" parameterType="int">
		delete from item where root_idn <![CDATA[=]]> #{root_idn}
	</delete>
	
</mapper>