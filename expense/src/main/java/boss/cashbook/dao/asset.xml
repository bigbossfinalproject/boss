<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="boss.cashbook.model.AssetBean">
	
	<!-- 사용자와 지출코드를 이용하여 자산 목록에서 1개의 정보만 불러오기 -->
	<select id="assetOne" parameterType="expense" resultType="asset">
		select * from asset where root_idn <![CDATA[=]]> #{root_idn} and asset_code <![CDATA[=]]> #{asset_code}
	</select>
	
	<!-- 코드값을 입력받아 자산 목록중 1개의 정보만 가져오기 -->
	<select id="codeAssetOne" resultType="asset">
		select * from asset where asset_code <![CDATA[=]]> #{asset_code}
	</select>
	
	<!-- 코드값을 입력받아 자산 목록중 1개의 정보만 가져오기 -->
	<select id="assetCodeOne" resultType="asset">
		select * from asset where asset_code <![CDATA[=]]> #{asset_code}
	</select>
	
	<!-- 자산 목록을 모두 불러오기 -->
	<select id="assetList" resultType="asset">
		select * from asset
	</select>
	
	<!-- 자산코드별 자산목록 가져오기 -->
	<select id="codeConList" parameterType="String" resultType="asset">
		select * from asset where asset_code like #{asset_code}
	</select>
	
	<!-- 지출 유형별 자산목록 가져오기 -->
	<select id="tradeAssetList" resultType="asset">
		select * from asset where trade_code <![CDATA[=]]> #{trade_code}
	</select>
	
	<!-- 자산코드별 자산 목록 개수를 불러오기 -->
	<select id="codeConOne" resultType="int">
		select count(*) from asset where asset_code like #{asset_code}
	</select>
	
	<!-- 사용자 개인별 자산 목록을 불러오기 -->
	<select id="memAssetList" parameterType="int" resultType="asset">
		select * from asset where root_idn <![CDATA[=]]> #{root_idn}
	</select>
	
	<!-- 사용자 개인별 거래매체의 자산 개수를 불러오기 -->
	<select id="userTradeCount" parameterType="java.util.Map" resultType="int">
		select count(*) from asset where root_id <![CDATA[=]]> #{root_id} and trade_code <![CDATA[=]]> #{trade_code}
	</select>
	
	<!-- 사용자 개인별 자산 정보를 입력하기 -->
	<insert id="userAssetInsert" parameterType="asset">
		insert into asset values (#{asset_code}, #{trade_code}, #{root_idn}, #{asset_date}, #{asset_name}, #{asset_purpose}, #{bank_code}, #{basic_amount}, #{now_amount}, #{asset_use}, #{root_id})
	</insert>
	
	<!-- 사용자 개인별 자산 정보를 수정하기 -->
	<update id="userAssetUpdate" parameterType="asset">
		update asset set trade_code <![CDATA[=]]> #{trade_code}, root_idn <![CDATA[=]]> #{root_idn}, asset_date <![CDATA[=]]> #{asset_date}, asset_name <![CDATA[=]]> #{asset_name}, asset_purpose <![CDATA[=]]> #{asset_purpose}, bank_code <![CDATA[=]]> #{bank_code}, basic_amount <![CDATA[=]]> #{basic_amount}, now_amount <![CDATA[=]]> #{now_amount}, asset_use <![CDATA[=]]> #{asset_use}, root_id <![CDATA[=]]> #{root_id} where asset_code <![CDATA[=]]> #{asset_code}
	</update>
	
	<!-- 사용자 개인별 자산 정보를 삭제하기 -->
	<delete id="userAssetDelete" parameterType="asset">
		delete from asset where asset_code <![CDATA[=]]> #{asset_code}
	</delete>
	
	<!-- 헤더info 가져오기 -->	
	<select id="header_info" parameterType="int" resultType="header_info">
	select sum(now_amount) total_amount, 
(select sum(a1.now_amount) from asset a1 where trade_code='account' and root_idn=#{root_idn} )account_amount, 
(select sum(e1.expense_amount) from expense e1 where trade_code='account' and root_idn=#{root_idn}) account_amount_spent,
(select sum(a2.now_amount) from asset a2 where trade_code='cash' and root_idn=#{root_idn}) cash_amount,
(select sum(e2.expense_amount) from expense e2 where trade_code='cash' and root_idn=#{root_idn}) cash_amount_spent
from asset a where a.root_idn=#{root_idn} group by a.root_idn
	</select> 
	

	<!-- 자산 계좌 이름을 입력받아서 자산 코드를 받아오기(소득 테이블에서 사용) -->
	<select id="getAssetCode" parameterType="String" resultType="String">
		select asset_code from asset where asset_name <![CDATA[=]]> #{assetName}
	</select>
	
	<!-- 자산 정보에서 현재 금액에서 마이너스 하기 -->
	<update id="nowAmountMinus" parameterType="java.util.Map">
		update asset set now_amount <![CDATA[=]]> now_amount - #{amount} where root_idn <![CDATA[=]]> #{root_idn} and asset_code <![CDATA[=]]> #{asset_code}
	</update>
	
	<!-- 자산 정보에서 현재 금액에서 플러스 하기 -->
	<update id="nowAmountPlus" parameterType="java.util.Map">
		update asset set now_amount <![CDATA[=]]> now_amount + #{amount} where root_idn <![CDATA[=]]> #{root_idn} and asset_code <![CDATA[=]]> #{asset_code}
	</update>
	
	<!-- 자산 정보에서 현재 잔액 가져오기 -->
	<select id="nowAmount" parameterType="java.util.Map" resultType="int">
		select now_amount from asset where root_idn <![CDATA[=]]> #{idn} and asset_code <![CDATA[=]]> #{asset}
	</select>
	
</mapper>